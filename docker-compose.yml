version: "3.4"

services:
  nginx:
    image: nginx:1.20.0-alpine
    ports:
      - "80:80"
    working_dir: /backend/
    volumes:
      - ./backend/:/backend/
      - ./default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - database
      - mail

  database:
    image: postgres:9.6.21-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: example
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./database:/var/lib/postgresql/data

  php:
    build:
      context: .
      dockerfile: php.Dockerfile
    volumes:
      - ./backend:/backend
    #    ports:
    #      - "9000:9000"

  composer:
    build:
      context: .
      dockerfile: composer.Dockerfile
    volumes:
      - ./backend:/var/www/html
    working_dir: /var/www/html
    command: sh -c "tail -f /dev/null"

  mail:
    image: maildev/maildev
    ports:
      - "1080:80"
    #      - "1025:25"

  # TODO dev
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  # ----------------

  frontend:
    image: node:lts-alpine3.13
    ports: [8000:3000]
    volumes:
      - ./frontend:/var/www/app
    working_dir: /var/www/app
    command: yarn dev
    environment:
      - HOST=0.0.0.0

  frontend-admin:
    image: node:lts-alpine3.13
    ports: [8001:3000]
    volumes:
      - ./frontend-admin:/var/www/app
    working_dir: /var/www/app
    command: yarn dev
    environment:
      - HOST=0.0.0.0
